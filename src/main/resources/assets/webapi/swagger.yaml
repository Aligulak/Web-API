swagger: '2.0'

info:
  title: WebAPI
  description: |
    Access Sponge powered Minecraft servers through a WebAPI

    # Introduction
    This is the documentation of the various API routes offered by the WebAPI plugin.

    This documentation assumes that you are familiar with the basic concepts of Web API's, such as GET, PUT, POST and DELETE methods, request HEADERS and RESPONSE CODES and JSON data.

    By default this documentation can be found at http://localhost:8080 (while your minecraft server is running) and the various routes start with http://localhost:8080/api/...

    As a quick test try reaching the route http://localhost:8080/api/info (remember that you can only access "localhost" routes on the server on which you are running minecraft).
    This route should show you basic information about your server, like the motd and player count.
  version: "<version>"

host: "<host>"

schemes:
  - http
basePath: /api

consumes:
  - application/json

produces:
  - application/json

tags:
  - name: Info
    description: Get general information about the minecraft server
  - name: Chat
    description: Provides access to the chat history.
  - name: Command
    description: List all commands on the server and execute them.
  - name: Player
    description: List all players and get detailed information about them.
  - name: World
    description: List all worlds and get detailed information about them.
  - name: Plugin
    description: List all plugins and get detailed information about them.
  - name: Entity
    description: List all entities and get detailed information about them.
  - name: Tile Entity
    description: List all tile entities and get detailed information about them.
  - name: Class
    description: Provides information about the classes loaded on the server.

#parameters:

#responses:

securityDefinitions:
  headerKey:
    type: apiKey
    name: x-webapi-key
    in: header
  queryKey:
    type: apiKey
    name: key
    in: query

security:
  - headerKey: []
  - queryKey: []

paths:
  /info:
    get:
      summary: Server info
      description: |
        Get general information about the minecraft server.

        > Required permission: info
      tags:
        - Info
      responses:
        200:
          description: General information about the server
          schema:
            $ref: '#/definitions/ServerInfo'
  /chat:
    get:
      summary: Chat
      description: |
        View a history of the server chat.

        > Required permission: chat
      tags:
        - Chat
      responses:
        200:
          description: A history of the chat.
          schema:
            $ref: '#/definitions/ChatList'
  /cmd:
    get:
      summary: Command list
      description: |
        Gets a list of all the commands available on the server.

        > Required permission: cmd
      tags:
        - Command
      responses:
        200:
          description: A list of commands
          schema:
            $ref: '#/definitions/CommandList'
    post:
      summary: Execute command
      description: |
        Execute a command on the server.

        > Required permission: cmd
      parameters:
        - name: Request
          in: body
          description: The command sent to the server
          schema:
            $ref: '#/definitions/CommandRequest'
      tags:
        - Command
      responses:
        200:
          description: The command executed successfully.
          schema:
            $ref: '#/definitions/CommandResponse'
  /class:
    get:
      summary: Cached classes
      description: |
        Get a list of all the classes that have been cached on the server.

        > Required permission: class
      tags:
        - Class
      responses:
        200:
          description: A list of all the classes that are cached on the server.
          schema:
            type: object
            properties:
              classes:
                type: array
                items:
                  type: string
                  description: The short class name.
  /class/{classname}:
    get:
      summary: Lookup class
      description: |
        Get the fields and methods of a specific class loaded on the server.
        Use either the short name if the class is already cached, or the fully quilified classname.

        > Required permission: class
      tags:
        - Class
      responses:
        200:
          description: An object describing the class fields and methods.
          schema:
            type: object
            properties:
              class:
                $ref: '#/definitions/Class'

  /player:
    get:
      summary: Player list
      description: |
        Get a list of all the players on the server.

        > Required permission: player
      tags:
        - Player
      responses:
        200:
          description: A list of all the players on the server
          schema:
            $ref: '#/definitions/PlayerList'
  /player/{uuid}:
    get:
      summary: Detailed player info
      description: |
        Get detailed information about a player.

        > Required permission: player
      parameters:
        - name: uuid
          in: path
          type: string
          description: The uuid of the player to get detailed information about.
      tags:
        - Player
      responses:
        200:
          description: Detailed information about the player.
          schema:
            $ref: '#/definitions/Player'
  /player/{uuid}/raw:
    get:
      summary: Raw player info
      description: |
        Get the raw player object

        > Required permission: player
      parameters:
        - name: uuid
          in: path
          type: string
          description: The uuid of the player to get raw information about.
      tags:
        - Player
      responses:
        200:
          description: Raw information about the player.
          schema:
            $ref: '#/definitions/Raw'
  /world:
    get:
      summary: World list
      description: |
        Get a list of all the worlds on the server.

        > Required permission: world
      tags:
        - World
      responses:
        200:
          description: A list of all the worlds on the server
          schema:
            $ref: '#/definitions/WorldList'
  /world/{uuid}:
    get:
      summary: Detailed world info
      description: |
        Get detailed information about a world.

        > Required permission: world
      parameters:
        - name: uuid
          in: path
          type: string
          description: The uuid of the world to get detailed information about.
      tags:
        - World
      responses:
        200:
          description: Detailed information about the world.
          schema:
            $ref: '#/definitions/World'
  /world/{uuid}/raw:
    get:
      summary: Raw world info
      description: |
        Get the raw world object

        > Required permission: world
      parameters:
        - name: uuid
          in: path
          type: string
          description: The uuid of the world to get raw information about.
      tags:
        - World
      responses:
        200:
          description: Raw information about the world.
          schema:
            $ref: '#/definitions/Raw'
  /plugin:
    get:
      summary: Plugin list
      description: |
        Get a list of all the plugins running on the server.

        > Required permission: plugin
      tags:
        - Plugin
      responses:
        200:
          description: A list of all the plugins on the server.
          schema:
            $ref: '#/definitions/PluginList'
  /plugin/{id}:
    get:
      summary: Detailed plugin info
      description: |
        Gets detailed information about a plugin.

        > Required permission: plugin
      parameters:
        - name: id
          in: path
          type: string
          description: The id of the plugin to get detailed information about.
      tags:
        - Plugin
      responses:
        200:
          description: Detailed information about the plugin.
          schema:
            $ref: '#/definitions/Plugin'
  /plugin/{id}/raw:
    get:
      summary: Raw plugin info
      description: |
        Get the raw plugin object

        > Required permission: plugin
      parameters:
        - name: id
          in: path
          type: string
          description: The id of the plugin to get raw information about.
      tags:
        - Plugin
      responses:
        200:
          description: Raw information about the plugin.
          schema:
            $ref: '#/definitions/Raw'
  /entity:
    get:
      summary: Entities list
      description: |
        Get a list of all entities on the server (in all worlds).

        > Required permission: entity
      tags:
        - Entity
      responses:
        200:
          description: A list of all the entities on the server.
          schema:
            $ref: '#/definitions/EntityList'
  /entity/{uuid}:
    get:
      summary: Detailed entity info
      description: |
        Get detailed information about an entity.

        > Required permission: entity
      parameters:
        - name: uuid
          in: path
          type: string
          description: The uuid of the entity to get detailed information about.
      tags:
        - Entity
      responses:
        200:
          description: Detailed information about the entity.
          schema:
            $ref: '#/definitions/Entity'
  /entity/{uuid}/raw:
    get:
      summary: Raw entity info
      description: |
        Get the raw entity object

        > Required permission: entity
      parameters:
        - name: uuid
          in: path
          type: string
          description: The uuid of the entity to get raw information about.
      tags:
        - Entity
      responses:
        200:
          description: Raw information about the entity.
          schema:
            $ref: '#/definitions/Raw'
  /tile-entity:
    get:
      summary: Tile entities list
      description: |
        Get a list of all tile entities on the server (in all worlds).

        > Required permission: tile-entity
      tags:
        - Tile Entity
      responses:
        200:
          description: A list of all the tile entities on the server.
          schema:
            $ref: '#/definitions/TileEntityList'
  /tile-entity/{worldUuid}/{x}/{y}/{z}:
    get:
      summary: Detailed tile entity info
      description: |
        Get detailed information about a tile entity.

        > Required permission: tile-entity
      parameters:
        - name: worldUuid
          in: path
          type: string
          description: The uuid of the world the tile entity is in.
        - name: x
          in: path
          type: string
          description: The x-coordinate of the tile entity.
        - name: y
          in: path
          type: string
          description: The y-coordinate of the tile entity.
        - name: z
          in: path
          type: string
          description: The z-coordinate of the tile entity.
      tags:
        - Tile Entity
      responses:
        200:
          description: Detailed information about the tile entity.
          schema:
            $ref: '#/definitions/TileEntity'
  /tile-entity/{worldUuid}/{x}/{y}/{z}/raw:
    get:
      summary: Raw tile entity info
      description: |
        Get the raw tile entity object

        > Required permission: tile-entity
      parameters:
        - name: worldUuid
          in: path
          type: string
          description: The uuid of the world the tile entity is in.
        - name: x
          in: path
          type: string
          description: The x-coordinate of the tile entity.
        - name: y
          in: path
          type: string
          description: The y-coordinate of the tile entity.
        - name: z
          in: path
          type: string
          description: The z-coordinate of the tile entity.
      tags:
        - Tile Entity
      responses:
        200:
          description: Raw information about the tile entity.
          schema:
            $ref: '#/definitions/Raw'


definitions:
  Raw:
    type: object
    description: A raw java-to-json converted object.
  Class:
    type: object
    description: A class definition that is loaded on the server.
    properties:
      fields:
        type: array
        items:
          type: object
          description: Represents a field from this class.
          properties:
            type:
              type: string
              description: The type of the field.
            modifiers:
              type: array
              description: The modifiers of the field.
              items:
                type: string
            from:
              type: string
              description: The class where this field is from (if from a superclass)
      methods:
        type: array
        items:
          type: object
          description: Represents a method from this class.
          properties:
            modifiers:
              type: array
              decription: The modifiers of the method.
              items:
                type: string
            params:
              type: array
              description: The parameters of the method.
              items:
                type: string
                description: The type of the parameter.
            return:
              type: string
              description: The type of the return value.
            from:
              type: string
              description: The class where this field is from (if from a superclass)

  Location:
    type: object
    description: Describes a location in a world
    properties:
      world:
        type: string
        description: The name of the world the player is in.
      x:
        type: number
        format: double
        description: The x-coordinate of the location.
      y:
        type: number
        format: double
        description: The y-coordinate of the location.
      z:
        type: number
        format: double
        description: The z-coordinate of the location.
  Vector3:
    type: object
    description: Describes a location
    properties:
      x:
        type: number
        format: double
        description: The x-coordinate of the vector.
      y:
        type: number
        format: double
        description: The y-coordinate of the vector.
      z:
        type: number
        format: double
        description: The z-coordinate of the vector.

  ServerInfo:
    type: object
    properties:
      motd:
        type: string
        description: The message of the day set on the server.
      players:
        type: integer
        description: The amount of players currently playing on the server
      maxPlayers:
        type: integer
        description: The maximum amount of players allowed on the server
      uptimeTicks:
        type: integer
        description: The number of ticks the server has been running
      hasWhitelist:
        type: boolean
        description: True if the server has a whitelist, false otherwise.
      minecraftVersion:
        type: string
        description: The minecraft version running on the server.
      api:
        type: object
        description: Information about the API running on the server.
        properties:
          id:
            type: string
            description: The unique id of the api.
          name:
            type: string
            description: The name of the api.
          version:
            type: string
            description: The version of the api.
          description:
            type: string
            description: The description of the api.
          url:
            type: string
            description: The website of the api.
          authors:
            type: array
            description: The list of authors that worked on the api.
            items:
              type: string
              description: The name of the author.

  ChatList:
    type: object
    properties:
      messages:
        type: array
        description: A list of chat messages.
        items:
          $ref: '#/definitions/ChatMessage'
  ChatMessage:
    type: object
    properties:
      timestamp:
        type: string
        description: The timestamp when the message was sent (server time)
      sender:
        type: string
        description: The name of the player that sent the message
      message:
        type: string
        description: The message that was sent.

  CommandList:
    type: object
    properties:
      commands:
        type: array
        description: A list of commands
        items:
          $ref: '#/definitions/Command'
  Command:
    type: object
    properties:
      name:
        type: string
        description: The main name of the command.
      aliases:
        type: array
        description: All the aliases with which the command can be executed.
        items:
          type: string
      usage:
        type: string
        description: The usage instructions for the command.
      description:
        type: string
        description: Describes what the command does.
  CommandRequest:
    type: object
    properties:
      name:
        type: string
        description: The name that is displayed as the executor.
        default: Web-API
      command:
        type: string
        description: The command and it's arguments that are sent to the server.
        required: true
      waitLines:
        type: integer
        description: The minimum amount of lines of text to wait for before returning the response.
        default: 0
      waitTime:
        type: integer
        description: The amount of time in milliseconds to wait for response messages from the server.
  CommandResponse:
    type: object
    properties:
      response:
        type: array
        description: An array of message that were sent in response to the command.
        items:
          type: string

  PlayerList:
    type: object
    properties:
      maxPlayers:
        type: integer
        description: The maximum amount of players this server supports.
      players:
        type: array
        description: A list of players.
        items:
          type: object
          properties:
            name:
              type: string
              description: The name of the player.
            uuid:
              type: string
              description: The unique identifier of the player.
  Player:
    type: object
    properties:
      name:
        type: string
        description: The name of the player.
      uuid:
        type: string
        description: The unique identifier of the player.
      address:
        type: string
        description: The IP address that the player is connecting from.
      latency:
        type: integer
        description: The latency (ping) of the player in ms.
      location:
        $ref: '#/definitions/Location'
      velocity:
        $ref: '#/definitions/Vector3'
      rotation:
        $ref: '#/definitions/Vector3'
      raw:
        type: object
        description: The raw object data attached to the player.
  WorldList:
    type: object
    properties:
      worlds:
        type: array
        description: A list of worlds.
        items:
          type: object
          properties:
            name:
              type: string
              description: The name of the world.
            uuid:
              type: string
              description: The unique identifier of the world.
  World:
    type: object
    properties:
      name:
        type: string
        description: The name of the world.
      uuid:
        type: string
        description: The unique id of the world.
      raw:
        type: object
        description: The raw object data attached to the world.
  PluginList:
    type: object
    properties:
      plugins:
        type: array
        description: A list of plugin ids.
        items:
          type: object
          properties:
            id:
              type: string
              description: The id of the plugin.
            name:
              type: string
              description: The name of the plugin.
  Plugin:
    type: object
    properties:
      id:
        type: string
        description: The unique id of the plugin.
      name:
        type: string
        description: The name of the plugin.
      description:
        type: string
        description: The description of the plugin.
      version:
        type: string
        description: The version of the plugin.
      url:
        type: string
        description: The website that the plugin belongs to.
      authors:
        type: array
        description: The list of authors that worked on the plugin.
        items:
          type: string
          description: The name of the author.

  EntityList:
    type: object
    properties:
      entities:
        type: array
        description: A list of entities.
        items:
          type: object
          properties:
            type:
              type: string
              description: The type of the entity.
            uuid:
              type: string
              description: The uuid of the entity.
  Entity:
    type: object
    properties:
      type:
        type: string
        description: The type of the entity.
      uuid:
        type: string
        description: The uuid of the entity.
      location:
        $ref: '#/definitions/Location'
      velocity:
        $ref: '#/definitions/Vector3'
      rotation:
        $ref: '#/definitions/Vector3'
      raw:
        type: object
        description: The raw object data attached to the entity.

  TileEntityList:
    type: object
    properties:
      tileEntities:
        type: array
        description: A list of tile entities.
        items:
          type: object
          properties:
            type:
              type: string
              description: The type of the tile entity.
            location:
              $ref: '#/definitions/Location'
  TileEntity:
    type: object
    properties:
      type:
        type: string
        description: The type of the entity.
      location:
        $ref: '#/definitions/Location'
      raw:
        type: object
        description: The raw object data attached to the entity.

