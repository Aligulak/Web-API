title: Class
type: object
description: A class definition that is loaded on the server.
properties:
  name:
    type: string
    description: The name of the class
  parent:
    type: string
    description: The name of the superclass
  fields:
    type: array
    items:
      type: object
      description: Represents a field from this class.
      properties:
        type:
          type: string
          description: The type of the field.
        modifiers:
          type: array
          description: The modifiers of the field.
          items:
            type: string
        from:
          type: string
          description: The class where this field is from (if from a superclass)
  methods:
    type: array
    items:
      type: object
      description: Represents a method from this class.
      properties:
        modifiers:
          type: array
          items:
            type: string
        params:
          type: array
          description: The parameters of the method.
          items:
            type: string
            description: The type of the parameter.
        return:
          type: string
          description: The type of the return value.
        from:
          type: string
          description: The class where this field is from (if from a superclass)
example:
  name: net.minecraft.tileentity.TileEntityChest
  parent: net.minecraft.tileentity.TileEntityLockableLoot
  fields:
    fabric:
      type: org.spongepowered.common.item.inventory.lens.Fabric
      modifiers:
      - private
    slots:
      type: org.spongepowered.common.item.inventory.lens.impl.collections.SlotCollection
      modifiers:
      - protected
      from: net.minecraft.tileentity.TileEntityLockableLoot
    lens:
      type: org.spongepowered.common.item.inventory.lens.Lens
      modifiers:
      - private
    empty:
      type: org.spongepowered.api.item.inventory.EmptyInventory
      modifiers:
      - protected
      from: net.minecraft.tileentity.TileEntityLockableLoot
    parent:
      type: org.spongepowered.api.item.inventory.Inventory
      modifiers:
      - protected
      from: net.minecraft.tileentity.TileEntityLockableLoot
    next:
      type: org.spongepowered.api.item.inventory.Inventory
      modifiers:
      - protected
      from: net.minecraft.tileentity.TileEntityLockableLoot
    children:
      type: java.util.List
      modifiers:
      - protected
      from: net.minecraft.tileentity.TileEntityLockableLoot
    slotIterator:
      type: java.lang.Iterable
      modifiers:
      - protected
      from: net.minecraft.tileentity.TileEntityLockableLoot
    customTileData:
      type: net.minecraft.nbt.NBTTagCompound
      modifiers:
      - private
      from: net.minecraft.tileentity.TileEntity
    manipulators:
      type: java.util.List
      modifiers:
      - private
      from: net.minecraft.tileentity.TileEntity
    tileType:
      type: org.spongepowered.api.block.tileentity.TileEntityType
      modifiers:
      - final
      - private
      from: net.minecraft.tileentity.TileEntity
    isTileVanilla:
      type: boolean
      modifiers:
      - final
      - private
      from: net.minecraft.tileentity.TileEntity
    timing:
      type: co.aikar.timings.Timing
      modifiers:
      - private
      from: net.minecraft.tileentity.TileEntity
    locatableBlock:
      type: org.spongepowered.api.world.LocatableBlock
      modifiers:
      - private
      from: net.minecraft.tileentity.TileEntity
  methods:
    getInventory:
      modifiers:
      - public
      - volatile
      params: []
      return: org.spongepowered.api.item.inventory.type.CarriedInventory
      from: net.minecraft.tileentity.TileEntityLockable
    getRootLens:
      modifiers:
      - public
      params: []
      return: org.spongepowered.common.item.inventory.lens.Lens
    getSlotProvider:
      modifiers:
      - public
      params: []
      return: org.spongepowered.common.item.inventory.lens.SlotProvider
      from: net.minecraft.tileentity.TileEntityLockableLoot
    handler$onConstructed$zij007:
      modifiers:
      - public
      params:
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
    handler$onUpdate$zij002:
      modifiers:
      - public
      params:
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
    handler$onOpenInventory$zij000:
      modifiers:
      - public
      params:
      - net.minecraft.entity.player.EntityPlayer
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
    getDoubleChestInventory:
      modifiers:
      - public
      params: []
      return: java.util.Optional
    handler$onCloseInventory$zij000:
      modifiers:
      - public
      params:
      - net.minecraft.entity.player.EntityPlayer
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
    setCustomDisplayName:
      modifiers:
      - public
      params:
      - java.lang.String
      return: void
    supplyVanillaManipulators:
      modifiers:
      - public
      params:
      - java.util.List
      return: void
      from: net.minecraft.tileentity.TileEntity
    parent:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.item.inventory.Inventory
      from: net.minecraft.tileentity.TileEntityLockableLoot
    clear:
      modifiers:
      - public
      params: []
      return: void
      from: net.minecraft.tileentity.TileEntityLockableLoot
    next:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.item.inventory.Inventory
      from: net.minecraft.tileentity.TileEntityLockableLoot
    first:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.item.inventory.Inventory
      from: net.minecraft.tileentity.TileEntityLockableLoot
    slots:
      modifiers:
      - public
      params: []
      return: java.lang.Iterable
      from: net.minecraft.tileentity.TileEntityLockableLoot
    getChild:
      modifiers:
      - public
      params:
      - int
      return: org.spongepowered.api.item.inventory.Inventory
      from: net.minecraft.tileentity.TileEntityLockableLoot
    toContainer:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.data.DataContainer
      from: net.minecraft.tileentity.TileEntity
    emptyInventory:
      modifiers:
      - final
      - protected
      params: []
      return: org.spongepowered.api.item.inventory.EmptyInventory
      from: net.minecraft.tileentity.TileEntityLockableLoot
    getTileEntity:
      modifiers:
      - public
      params: []
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntityLockable
    getCarrier:
      modifiers:
      - public
      params: []
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntityLockable
    remove:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.key.Key
      return: org.spongepowered.api.data.DataTransactionResult
      from: net.minecraft.tileentity.TileEntity
    get:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.key.Key
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    getProperty:
      modifiers:
      - public
      params:
      - java.lang.Class
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    getValue:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.key.Key
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    access$000:
      modifiers:
      - static
      params: []
      return: net.minecraft.util.registry.RegistryNamespaced
      from: net.minecraft.tileentity.TileEntity
    getLocation:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.world.Location
      from: net.minecraft.tileentity.TileEntity
    copy:
      modifiers:
      - public
      - volatile
      params: []
      return: org.spongepowered.api.data.value.ValueContainer
      from: net.minecraft.tileentity.TileEntity
    getType:
      modifiers:
      - final
      - public
      params: []
      return: org.spongepowered.api.block.tileentity.TileEntityType
      from: net.minecraft.tileentity.TileEntity
    getKeys:
      modifiers:
      - public
      params: []
      return: java.util.Set
      from: net.minecraft.tileentity.TileEntity
    offer:
      modifiers:
      - public
      - volatile
      params:
      - org.spongepowered.api.data.value.ValueContainer
      - org.spongepowered.api.data.merge.MergeFunction
      return: org.spongepowered.api.data.DataTransactionResult
      from: net.minecraft.tileentity.TileEntity
    isValid:
      modifiers:
      - public
      params: []
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    handler$onRegister$zif000:
      modifiers:
      - private
      - static
      params:
      - java.lang.String
      - java.lang.Class
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
      from: net.minecraft.tileentity.TileEntity
    handler$onReadFromNBT$zif001:
      modifiers:
      - public
      params:
      - net.minecraft.nbt.NBTTagCompound
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
      from: net.minecraft.tileentity.TileEntity
    handler$onWriteToNBT$zif001:
      modifiers:
      - public
      params:
      - net.minecraft.nbt.NBTTagCompound
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable
      return: void
      from: net.minecraft.tileentity.TileEntity
    lambda$onMarkDirty$0:
      modifiers:
      - private
      params:
      - org.spongepowered.api.block.tileentity.TileEntity
      return: void
      from: net.minecraft.tileentity.TileEntity
    handler$onMarkDirty$zif000:
      modifiers:
      - public
      params:
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
      from: net.minecraft.tileentity.TileEntity
    getContainers:
      modifiers:
      - public
      params: []
      return: java.util.Collection
      from: net.minecraft.tileentity.TileEntity
    supportsCustom:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.key.Key
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    getCustomValue:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.key.Key
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    lambda$getKeys$1:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: java.util.stream.Stream
      from: net.minecraft.tileentity.TileEntity
    hasManipulators:
      modifiers:
      - public
      params: []
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    removeCustom:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.key.Key
      return: org.spongepowered.api.data.DataTransactionResult
      from: net.minecraft.tileentity.TileEntity
    writeToNbt:
      modifiers:
      - public
      params:
      - net.minecraft.nbt.NBTTagCompound
      return: void
      from: net.minecraft.tileentity.TileEntity
    readFromNbt:
      modifiers:
      - public
      params:
      - net.minecraft.nbt.NBTTagCompound
      return: void
      from: net.minecraft.tileentity.TileEntity
    createArchetype:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.block.tileentity.TileEntityArchetype
      from: net.minecraft.tileentity.TileEntity
    getCustom:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.key.Key
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    offerCustom:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.manipulator.DataManipulator
      - org.spongepowered.api.data.merge.MergeFunction
      return: org.spongepowered.api.data.DataTransactionResult
      from: net.minecraft.tileentity.TileEntity
    getLocatableBlock:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.world.LocatableBlock
      from: net.minecraft.tileentity.TileEntity
    isVanilla:
      modifiers:
      - public
      params: []
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    getBlock:
      modifiers:
      - public
      params: []
      return: org.spongepowered.api.block.BlockState
      from: net.minecraft.tileentity.TileEntity
    supports:
      modifiers:
      - public
      params:
      - java.lang.Class
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    validateRawData:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.DataView
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    setRawData:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.DataView
      return: void
      from: net.minecraft.tileentity.TileEntity
    getValues:
      modifiers:
      - public
      params: []
      return: java.util.Set
      from: net.minecraft.tileentity.TileEntity
    getOrCreate:
      modifiers:
      - public
      params:
      - java.lang.Class
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    copyFrom:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.DataHolder
      - org.spongepowered.api.data.merge.MergeFunction
      return: org.spongepowered.api.data.DataTransactionResult
      from: net.minecraft.tileentity.TileEntity
    undo:
      modifiers:
      - public
      params:
      - org.spongepowered.api.data.DataTransactionResult
      return: org.spongepowered.api.data.DataTransactionResult
      from: net.minecraft.tileentity.TileEntity
    getTimingsHandler:
      modifiers:
      - public
      params: []
      return: co.aikar.timings.Timing
      from: net.minecraft.tileentity.TileEntity
    getApplicableProperties:
      modifiers:
      - public
      params: []
      return: java.util.Collection
      from: net.minecraft.tileentity.TileEntity
    lambda$getOrCreate$0:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: org.spongepowered.api.data.manipulator.DataManipulator
      from: net.minecraft.tileentity.TileEntity
    getContentVersion:
      modifiers:
      - public
      params: []
      return: int
      from: net.minecraft.tileentity.TileEntity
    lambda$getCustom$1:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.key.Key
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    lambda$getValues$2:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: java.util.stream.Stream
      from: net.minecraft.tileentity.TileEntity
    lambda$getCustom$2:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.key.Key
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    lambda$getCustomValue$4:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.key.Key
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: java.util.Optional
      from: net.minecraft.tileentity.TileEntity
    lambda$getCustomValue$3:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.key.Key
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    lambda$supportsCustom$0:
      modifiers:
      - private
      - static
      params:
      - org.spongepowered.api.data.key.Key
      - org.spongepowered.api.data.manipulator.DataManipulator
      return: boolean
      from: net.minecraft.tileentity.TileEntity
    getCustomManipulators:
      modifiers:
      - public
      params: []
      return: java.util.List
      from: net.minecraft.tileentity.TileEntity
    markDirty:
      modifiers:
      - public
      params: []
      return: void
      from: net.minecraft.tileentity.TileEntity
    getTileData:
      modifiers:
      - public
      params: []
      return: net.minecraft.nbt.NBTTagCompound
      from: net.minecraft.tileentity.TileEntity
    setValid:
      modifiers:
      - public
      params:
      - boolean
      return: void
      from: net.minecraft.tileentity.TileEntity
    handler$endWriteToNBTInject$zoc000:
      modifiers:
      - private
      params:
      - net.minecraft.nbt.NBTTagCompound
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable
      return: void
      from: net.minecraft.tileentity.TileEntity
    handler$endReadFromNBTInject$zoc000:
      modifiers:
      - private
      params:
      - net.minecraft.nbt.NBTTagCompound
      - org.spongepowered.asm.mixin.injection.callback.CallbackInfo
      return: void
      from: net.minecraft.tileentity.TileEntity
    finalize:
      modifiers:
      - protected
      params: []
      return: void
      from: java.lang.Object
    wait:
      modifiers:
      - final
      - native
      - public
      params:
      - long
      return: void
      from: java.lang.Object
    equals:
      modifiers:
      - public
      params:
      - java.lang.Object
      return: boolean
      from: java.lang.Object
    toString:
      modifiers:
      - public
      params: []
      return: java.lang.String
      from: java.lang.Object
    hashCode:
      modifiers:
      - native
      - public
      params: []
      return: int
      from: java.lang.Object
    getClass:
      modifiers:
      - final
      - native
      - public
      params: []
      return: java.lang.Class
      from: java.lang.Object
    clone:
      modifiers:
      - native
      - protected
      params: []
      return: java.lang.Object
      from: java.lang.Object
    notify:
      modifiers:
      - final
      - native
      - public
      params: []
      return: void
      from: java.lang.Object
    notifyAll:
      modifiers:
      - final
      - native
      - public
      params: []
      return: void
      from: java.lang.Object
    registerNatives:
      modifiers:
      - native
      - private
      - static
      params: []
      return: void
      from: java.lang.Object