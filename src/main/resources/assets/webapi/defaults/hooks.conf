# Web hooks are used to send certain events on minecraft to other endpoints.
# This can be used for example to log chat or react to certain commands.

# The endpoints in this list get called when a player earns an achievement.
# They get passed the player and achievement in the body (if method != GET).
# Please note that the endpoints don't get called in any particular order, and might even be called concurrently.
achievement=[
    {
        address="http://127.0.0.1:25000/achievement"
        method=POST
        enabled=false
    }
]

# The endpoints in this list get called when a chat message is sent.
# They get passed the chat message in the body (if method != GET)(same format as messages from /history/chat endpoint).
# Please note that the endpoints don't get called in any particular order, and might even be called concurrently.
chat=[
    {
        address="http://127.0.0.1:25000/chat"
        method=POST
        enabled=false
    }
]

# The endpoints in this list get called when a chat message is sent.
# They get passed the chat message in the body (if method != GET)(same format as messages from /history/chat endpoint).
# Please note that the endpoints don't get called in any particular order, and might even be called concurrently.
command=[
    {
        # This is the name of the endpoint, which is used to call it via the webapi command.
        name=test

        # This is the address of the endpoint. It may contain parameters that are replaced when being called.
        # Parameters have to be placed in curly braces, { and }, and will be a simple string (uuid of object
        # where applicable)
        address="http://127.0.0.1:25000/{world}"

        # This is the http method that is used (GET, PUT, POST or DELETE)
        method=POST

        # Set to true or omit to enable the endpoint.
        enabled=false

        # This is a list of additional headers that is sent to the server. You can use this to e.g. specify a secret
        # key which ensures that the server knows the requests are coming from the Web-API. You may also use variables
        # here (same format as in "address"). Please note the headers "User-Agent", "Content-Type" and "Content-Length"
        # will always be overridden by the WebAPI.
        headers=[
            {
                name=X-WEBAPI-KEY
                value=MY-SUPER-SECRET-KEY
            },
            {
                name=X-TEST-HEADER
                value="{player}"
            }
        ]

        # Here you have to specify what parameters are used in the address, headers and body.
        # Parameters in the address and headers have to be used explicitly, the body automatically contains all the
        # parameters that are listed here. The parameters are expected to show up in this order when calling the command
        params=[
            {
                name=player
                type=player
            },
            {
                name=world
                type=world
            }
        ]
    }
]

# The endpoints in this list get called when a player dies.
# They get passed the killer and the target (if method != GET).
# Please note that the endpoints don't get called in any particular order, and might even be called concurrently.
"player_death"=[
    {
        address="http://127.0.0.1:25000/death"
        method=POST
        enabled=false
    }
]
